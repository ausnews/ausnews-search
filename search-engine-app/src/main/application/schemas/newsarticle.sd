schema newsarticle {
    document newsarticle {
        field headline type string {
            indexing: index | summary
            index: enable-bm25
            stemming: best
        }
        field url type string {
            indexing: attribute | summary
        }
        field keywords type array<string> {
            indexing: summary
        }
        field firstpubtime type long {
            indexing: attribute | summary
        }
        field modtime type long {
            indexing: summary
        }
        field sentiment type float {
            indexing: summary
        }
        field subjectivity type float {
            indexing: summary
        }
        field wordcount type long {
            indexing: summary
        }
        field bodytext type string {
            indexing: index | summary
            index: enable-bm25
            summary: dynamic
            stemming: best
        }
        field abstract type string {
            indexing: summary
        }
        field author type string {
            indexing:  summary
        }
        field bylines type array<string> {
            indexing:  index | summary
        }
        field source type string {
            indexing:  index | summary | attribute
        }
        field section type string {
            indexing:  summary
        }
        field twitter_favourite_count type int {
            indexing: summary | attribute
        }
        field twitter_retweet_count type int {
            indexing: summary | attribute
        }
        field twitter_link type string {
            indexing: summary
        }
        field group_doc_id type string {
            indexing: attribute | summary
        }
        field group_doc_id_relevance type double {
            indexing: attribute | summary
        }
    }

    fieldset default {
        fields: headline, bodytext
    }

    rank-profile default {
        first-phase {
            expression: nativeRank(headline, bodytext)
        }
    }

    rank-profile bm25 inherits default {
        first-phase {
            expression: bm25(headline) + bm25(bodytext)
        }
    }

    rank-profile bm25_freshness inherits default {
        first-phase {
            expression: bm25(headline) + bm25(bodytext) + freshness(firstpubtime).logscale * 2
        }
        rank-properties {
            freshness(firstpubtime).halfResponse: 172800
        }
    }

    rank-profile twitter inherits bm25_freshness {
        rank-properties {
          query(twitterFavourite): 0.3
          query(twitterRetweet): 0.6
          query(twitterWeight): 0.4
          query(freshnessWeight): 2
          freshness(firstpubtime).halfResponse: 7200
        }

        function twitter() {
            expression: attribute(twitter_favourite_count) * query(twitterFavourite) + attribute(twitter_retweet_count) * query(twitterRetweet)
        }

        # normalization factor for the weighted sum
        function normalization() {
            expression: $twitterWeight + $freshnessWeight
        }

        first-phase {
            expression: ((freshness(firstpubtime).logscale * query(freshnessWeight)) * (query(twitterWeight) * twitter)) / normalization
        }

        summary-features: twitter freshness(firstpubtime).logscale
    }
}
